AWSTemplateFormatVersion: 2010-09-09
Description: >-
  aws-sam-typescript-library

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        BOOKS_TABLE: !Ref BooksTable
        BOOKS_QUEUE: !Ref BookQueue
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 100

Resources:
  BooksApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true
  getBooksFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/GetBooksHandler.getBooksHandler
      Description: A simple example includes a HTTP get method to get all books from a DynamoDB table.
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BooksTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref BooksApi
            Path: /
            Method: GET
            Auth:
              ApiKeyRequired: true
  
  getBookByIdFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/GetBookByIdHandler.getBookByIdHandler
      Description: A simple example includes a HTTP get method to get one book by id from a DynamoDB table.
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BooksTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref BooksApi
            Path: /{id}
            Method: GET
            Auth:
              ApiKeyRequired: true
  
  putBookFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/PutBookHandler.putBookHandler
      Description: A simple example includes a HTTP post method to add one book to an SQS queue (to be written to a DynamoDB table later).
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt BookQueue.QueueName
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref BooksApi
            Path: /
            Method: POST
            Auth:
              ApiKeyRequired: true

  writeBookFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/WriteBookHandler.writeBookHandler
      Description: A simple example includes an SQS subscription to write queued object to DynamoDB
      Timeout: 25 # Chosen to be less than the default SQS Visibility Timeout of 30 seconds
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref BooksTable
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt BookQueue.Arn
            BatchSize: 1

  BooksTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  BookQueue:
    Type: AWS::SQS::Queue

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs12.x
      RetentionPolicy: Retain

Outputs:
  BookTableArn:
    Description: "Book table arn"
    Value: !GetAtt BooksTable.Arn
  BookQueueArn:
    Description: "Book queue arn"
    Value: !GetAtt BookQueue.Arn
